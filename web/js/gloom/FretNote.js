// Generated by CoffeeScript 2.0.0-alpha1
(function() {
  var FretNote;

  FretNote = class FretNote {
    constructor(nb_frets = 21, capodaster = 0) {
      var fret_nb, i, j, len, ref, ref1, string, string_A, string_B, string_D, string_E, string_G, string_e;
      this.nb_frets = nb_frets;
      this.capodaster = capodaster;
      this.strings = [
        string_e = {
          note: 64,
          num: 1,
          notes: []
        }, string_B = {
          note: 59,
          num: 2,
          notes: []
        }, string_G = {
          note: 55,
          num: 3,
          notes: []
        }, string_D = {
          note: 50,
          num: 4,
          notes: []
        }, string_A = {
          note: 45,
          num: 5,
          notes: []
        }, string_E = {
          note: 40,
          num: 6,
          notes: []
        }
      ];
      ref = this.strings;
      for (i = 0, len = ref.length; i < len; i++) {
        string = ref[i];
        for (fret_nb = j = 0, ref1 = this.nb_frets; 0 <= ref1 ? j <= ref1 : j >= ref1; fret_nb = 0 <= ref1 ? ++j : --j) {
          string.notes.push(string.note + fret_nb);
        }
      }
    }

    noteToFret(note) {
      var fret_nb, i, j, len, ref, ref1, ref2, string;
      for (fret_nb = i = ref = this.capodaster, ref1 = this.nb_frets; ref <= ref1 ? i <= ref1 : i >= ref1; fret_nb = ref <= ref1 ? ++i : --i) {
        ref2 = this.strings;
        for (j = 0, len = ref2.length; j < len; j++) {
          string = ref2[j];
          if (note === string.notes[fret_nb]) {
            return {
              string: string.num,
              fret: fret_nb
            };
          }
        }
      }
    }

    technicalNote(technical) {
      var fret, string;
      string = technical.string;
      fret = technical.fret;
      return this.strings[string - 1].notes[fret];
    }

  };

  this.FretNote = FretNote;

}).call(this);
